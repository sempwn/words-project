<p>
	<strong>Title:</strong>
	<%= @word.name %>
</p>

<p>
	<strong>Description:</strong>
	<%= @word.description %>
</p>

<p>
	<%= link_to 'Edit', edit_word_path(@word) %>
	<%= link_to 'Back', words_path %>
</p>
<svg id="bubble-chart"></svg>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var diameter = $("#bubble-chart").width(),
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("#bubble-chart")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("<%= url_for :controller => 'words', :action => 'show', :id => @word.id  -%>.json", function(error, root) {
  if (error) throw error;

  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });
      

  node.append("text")
      .attr("dy", ".3em")
        .on("click",function(d){
        window.location = d.url})
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
     

});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size, url: node.url});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>